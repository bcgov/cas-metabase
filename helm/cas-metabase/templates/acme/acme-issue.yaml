{{- if not .Values.metabase.nginxSidecar.sslTermination }}

{{- $caServer := "https://acme-v02.api.letsencrypt.org/directory" }}

{{- if .Values.metabase.nginxSidecar.caServerSecret }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace .Values.metabase.nginxSidecar.caServerSecret ) }}
{{- $caServer = (index $secret.data .Values.metabase.nginxSidecar.caServerKey) | b64dec }}
{{- end -}}


apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cas-metabase.fullname" . }}-acme-issue
  labels:
{{ include "cas-metabase.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "-5"
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
{{ include "cas-metabase.labels" . | indent 14 }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ template "cas-metabase.fullname" . }}-acme-issue
          image: bitnami/git
          resources:
            limits:
              cpu: 1000m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: HOME
              value: /tmp
          command:
            - /usr/bin/env
            - bash
            - -c
            - |
              set -euxo pipefail;
              if [ ! -f /tmp/.acme.sh/{{ .Values.route.host }}/{{ .Values.route.host }}.cer ]; then
                echo "Getting a new cert from Let's Encrypt for {{ .Values.route.host }}";
                git clone --branch 2.8.8 https://github.com/acmesh-official/acme.sh.git /tmp/acme.sh;
                cd /tmp/acme.sh;
                ./acme.sh --install --force --server {{ $caServer }} -m {{ .Values.metabase.nginxSidecar.caAccountEmail }} ;
                ./acme.sh --issue -d {{ .Values.route.host }} -w /tmp --server {{ $caServer }} -m {{ .Values.metabase.nginxSidecar.caAccountEmail }} --days {{.Values.metabase.nginxSidecar.renewalDays}};
              fi;
          volumeMounts:
            - mountPath: /tmp/.acme.sh
              name: acme-home
            - mountPath: /tmp/.well-known/acme-challenge
              name: acme-challenge
      volumes:
        - name: acme-home
          persistentVolumeClaim:
            claimName: {{ template "cas-metabase.fullname" . }}-acme-home
        - name: acme-challenge
          persistentVolumeClaim:
            claimName: {{ template "cas-metabase.fullname" . }}-acme-challenge
      imagePullSecrets:
        - name: dockerhub-registry
{{- end }}
