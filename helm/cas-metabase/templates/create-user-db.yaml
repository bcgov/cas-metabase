apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cas-metabase.fullname" . }}-create-user-db-{{ .Release.Revision }}-{{ randAlphaNum 5 | lower }}
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 10
  template:
    metadata:
      name: {{ template "cas-metabase.fullname" . }}-create-user-db
      labels: {{ include "cas-metabase.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ template "cas-metabase.fullname" . }}-create-user-db
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          image: {{ index .Values "cas-postgres" "patroni" "image" "repository" }}:{{ index .Values "cas-postgres" "patroni" "image" "tag" }}
          env:
            - name: PGDATABASE
              value: postgres
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password-superuser
                  name: {{ template "cas-metabase.fullname" . }}-patroni
            - name: PGPORT
              value: "5432"
            - name: PGHOST
              value: {{ template "cas-metabase.fullname" . }}-patroni
            - name: METABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ template "cas-metabase.fullname" . }}
            - name: METABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ template "cas-metabase.fullname" . }}
            - name: METABASE_DATABASE
              value: metabase
          command:
                - /usr/bin/env
                - bash
                - -c
                - |
                  set -euo pipefail;
                  create-user-db -d $(METABASE_DATABASE) -u $(METABASE_USER) -p $(METABASE_PASSWORD) --owner;
      restartPolicy: Never
