cas-postgres:
  patroni:
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 15m
        memory: 600Mi
    persistentVolume:
      storageClass: netapp-block-standard
      size: 5Gi
    replicaCount: 3
    env:
      ALLOW_NOSSL: true
      USE_WALG_BACKUP: "true"
      USE_WALG_RESTORE: "true"
    walE:
      enable: true
      # the GCS bucket name should be {{ namespace }}-{{ gcs.bucketSuffix }}
      gcsBucket:
      # kubernetesSecret should be gcp-{{ namespace }}-{{ gcs.bucketSuffix }}-service-account-key
      kubernetesSecret:
    # options below are required if walE.enable is true
  namespace:
  gcs:
    bucketSuffix:

replicaCount: 2
image:
  repository: metabase/metabase
  tag: v0.49.6
  pullPolicy: Always
database:
  type: postgres
  host: cas-metabase-patroni
  port: 5432
  dbname: metabase
  existingSecret: cas-metabase
  existingSecretUsernameKey: database-user
  existingSecretPasswordKey: database-password
resources:
  limits:
    cpu: 500m
    memory: 4Gi
  requests:
    cpu: 25m
    memory: 2Gi
podLabels:
  app.kubernetes.io/component: app

# Config Jetty web server
listen:
  host: "0.0.0.0"
  port: 3000

service:
  externalPort: 80
  internalPort: 3000

livenessProbe:
  initialDelaySeconds: 120
  timeoutSeconds: 30
  failureThreshold: 6

readinessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 3
  periodSeconds: 5

# Generate k8s NetworkPolicy objects
networkPolicies:
  enable: true

prod-test-restore:
  enable: false

metabaseHPA:
  enable: false

download-cas-metabase-dags:
  image:
    tag: 69f346b134d99e9e5e6d50e16198fd4977fc3264 # pragma: allowlist secret
  airflowEndpoint: https://cas-airflow-dev.apps.silver.devops.gov.bc.ca
  dagId: fetch_and_save_dag_from_github
  helm:
    hook: "pre-install,pre-upgrade"

terraform-bucket-provision:
  terraform:
    namespace_apps: '["mb-backups"]'
    workspace: metabase
