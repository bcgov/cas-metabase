cas-postgres:
  patroni:
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 15m
        memory: 600Mi
    persistentVolume:
      storageClass: netapp-block-standard
      size: 5Gi
    replicaCount: 3
    env:
      ALLOW_NOSSL: true
      USE_WALG_BACKUP: "true"
      USE_WALG_RESTORE: "true"
    walE:
      enable: true
      # the GCS bucket name should be {{ namespace }}-{{ gcs.bucketSuffix }}
      gcsBucket:
      # kubernetesSecret should be gcp-{{ namespace }}-{{ gcs.bucketSuffix }}-service-account-key
      kubernetesSecret:
    # options below are required if walE.enable is true
  namespace:
  gcs:
    bucketSuffix:

metabase:
  replicaCount: 2
  image:
    repository: gcr.io/ggl-cas-storage/metabase
    tag: latest
  database:
    type: postgres
    host: cas-metabase-patroni
    port: 5432
    dbname: metabase
    existingSecret: cas-metabase
    existingSecretUsernameKey: database-user
    existingSecretPasswordKey: database-password
  resources:
    limits:
      cpu: 1
      memory: 4Gi
    requests:
      cpu: 50m
      memory: 2Gi
  podLabels:
    app.kubernetes.io/component: app

  nginxSidecar:
    enable: false
    image:
      repository: gcr.io/ggl-cas-storage/nginx
      tag: ~ # will be set to the commit sha1 by the make install command
      pullPolicy: IfNotPresent
    # set to false to deploy the application with an insecure route,
    # and issue an SSL certificate using acme.sh
    sslTermination: true
    # If provided, the acme issue/renewal scripts will use a custom server
    # Otherwise it defaults to Let's Encrypt
    caServerSecret: ~
    caServerKey: ~
    caAccountEmail: ggircs@gov.bc.ca
    storageClassName: netapp-file-standard
    renewalDays: 60

# Generate k8s NetworkPolicy objects
networkPolicies:
  enable: true

restoreFromProd:
  enable: false

download-cas-metabase-dags:
  image:
    tag: 69f346b134d99e9e5e6d50e16198fd4977fc3264 # pragma: allowlist secret
  airflowEndpoint: https://cas-airflow-dev.apps.silver.devops.gov.bc.ca
  dagId: fetch_and_save_dag_from_github
  helm:
    hook: "pre-install,pre-upgrade"
